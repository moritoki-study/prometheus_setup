global:
  # サーバーメトリクスの収集間隔
  scrape_interval:     15s
  # メトリクス収集のタイムアウト値
  scrape_timeout: 10s
  # 監視ルールの評価間隔
  evaluation_interval: 15s

  external_labels:
    # AlertManagerの名前
    monitor: 'alert-monitor'

# 監視ルールファイルの場所
rule_files:
  - /etc/prometheus/alerting_rules/alert_sample.yml
  - /etc/prometheus/alerting_rules/blackbox.yml
  - /etc/prometheus/alerting_rules/node_monitoring.yml
  - /etc/prometheus/alerting_rules/test_httpserver_log.yml
  - /etc/prometheus/alerting_rules/test_httpserver_request.yml

# AlertManagerの設定
# https://tech-lab.sios.jp/archives/16604
alerting:
  alertmanagers:
    - scheme: http
      static_configs:
        - targets:
          # AlertManagerを動作させているホストのIPアドレス/Host名:Port番号
          # - alertmanager:9093
          - 172.31.13.240:9093 # ec2のプライベートIP: 9003:alertmanagerのポート

# 172.31.13.240と指定すると動かない。なぜだろう
scrape_configs:
  - job_name: "node_exporter"
    static_configs:
      - targets: ["172.31.13.240:9100"]
  - job_name: "blackbox_exporter_tcp"
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
        - 172.31.13.240:8080
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 172.31.13.240:9115 # blackbox_exporterが稼働するホスト？
  - job_name: "blackbox_exporter_http"
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - 172.31.13.240:8081/metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 172.31.13.240:9115 # blackbox_exporterが稼働するホスト？
  - job_name: "grok_exporter"
    static_configs:
      - targets: ["172.31.13.240:9144"]
    metric_relabel_configs:  
      - source_labels: [__name__]
        regex: ^go_.*
        action: drop
  - job_name: "test_httpserver"
    static_configs:
      - targets: ["172.31.13.240:8081"]
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: ^a_.*
        action: keep



# メトリクス対象(サーバー)の設定（node_exporterの設定）
# 全てのコンテナに対して実施
#scrape_configs:
#  - job_name: prometheus # 監視対象ルールの名前だと思われる
#    metrics_path: /metrics # メトリクス監視であれば固定だろう
#    static_configs:
#      - targets: # 監視対象のサーバの設定
#        # prometheusサーバー(今回インストールしたprometheus自身)
#        - 172.31.13.240:9090 # ec2のプライベートIP, 9090:prometheusサーバのポート
#  - job_name: node-exporter
#    metrics_path: /metrics
#    static_configs:
#      - targets:
#        - 172.31.13.240:9100
#  - job_name: grafana
#    metrics_path: /metrics
#    static_configs:
#      - targets:
#        - 172.31.13.240:3000
#  - job_name: alertmanager
#    metrics_path: /metrics
#    static_configs:
#      - targets:
#        - 172.31.13.240:9093
#  - job_name: blackbox_exporter
#    metrics_path: /metrics
#    static_configs:
#      - targets:
#        - 172.31.13.240
#  - job_name: grok_exporter
#    metrics_path: /metrics
#    static_configs:
#      - targets:
#        - 172.31.13.240:9144
#  - job_name: test_httpserver
#    metrics_path: /metrics
#    static_configs:
#      - targets:
#        - 172.31.13.240:8080
#        - 172.31.13.240:8081

# 死活監視
# https://qiita.com/mmorita44/items/8eca5e6fae9fd40807ce
#  - job_name: 'blackbox_icmp'
#    scrape_interval: 10s
#    metrics_path: /probe
#    params:
#      module: [icmp] # icmp監視？pingのようなもの
#    static_configs:
#      - targets:
#        - 172.31.13.240
#    relabel_configs:
#      - source_labels: [__address__]
#        target_label: __param_target
#      - source_labels: [__param_target]
#        target_label: instance
#      - target_label: __address__
#        replacement: blackbox_exporter:9115

# ログ監視
# https://github.com/rongfengliang/grok-exporter-docker-compose/blob/master/prometheus.yml
#  - job_name: grok
#    metrics_path: /metrics
#    scrape_interval: 10s
#    scrape_timeout: 10s
#    static_configs:
#      - targets: ['172.31.13.240:9144']
